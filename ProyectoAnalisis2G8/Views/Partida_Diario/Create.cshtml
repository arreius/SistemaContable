@model ProyectoAnalisis2G8.Models.Partida_Diario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
 
   
}


<div class="container-fluid">

    <h1 class="h3 mb-2 text-gray-800">Libro de diario</h1>

    <div class="card shadow mb-4 w-auto">
        <div class="card-header py-3">
            <h4 class="m-0 font-weight-bold text-primary">
                Crear Nueva Partida de Diario
                <button type="button" class="btn btn-warning" style="float: right;" onclick="location.href='@Url.Action("Index", "Partida_Diario")'">Regresar</button>
            </h4>
        </div>
    
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                

            <div class="form-horizontal" id="form-data">
                <h4>Datos</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group" style="display:none;">
                    <label class="control-label col-md-2" for="correlativo">
                        Correlativo
                    </label>

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.correlativo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.correlativo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="box" style=" display: flex; align-items: stretch; ">
                    <div class="form-group">
                        <label class="control-label" for="num_documento">
                            Número de documento
                        </label>

                        <div class="col-md-11">
                            @Html.EditorFor(model => model.num_documento, new { htmlAttributes = new { @class = "form-control", @required = "text",  @maxlength = "6", @minlength = "4", @pattern = "\\d*" } })
                            @Html.ValidationMessageFor(model => model.num_documento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label " for="fecha">
                            Fecha
                        </label>
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control", @type="date", @required = "required", @onfocus = "this.max=new Date().toISOString().split('T')[0]" } })
                            @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2" for="descripcion">
                        Descripción
                    </label>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr>
                <div class="card  mb-4">
                    <div class="card-body">
                        <div class="table-responsive ">
                            <table class="table table-bordered display"
                                   id="newAccItemDetails"
                                   width="100%"
                                   cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>Cuenta</th>
                                        <th>Nombre de cuenta</th>
                                        <th>Documento</th>
                                        <th>Debe</th>
                                        <th>Haber</th>
                                        <th>Acción</th>

                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th><button type="button" class="btn btn-success" id="newLine" onclick="$('#searchAccount').modal('show');">Nueva Linea</button></th>
                                        <th></th>
                                        <th>Total</th>
                                        <th><span id="totalDebe" onchange="formatCur()" data-type="currency">Q0.00</span></th>
                                        <th><span id="totalHaber" onchange="formatCur()" data-type="currency">Q0.00</span></th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div id="divHiddens">
               
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success" onclick="submit2(); return false;">Crear</button>
                    </div>
                </div>
            </div>
    }

</div>
    </div>
</div>


<div class="modal fade modal-lg" id="searchAccount" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">
                    Agregar cuenta
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="table-responsive ">
                            <table class="table table-bordered display"
                                   id="accItemTable"
                                   width="100%"
                                   cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>
                                            Número de cuenta
                                        </th>
                                        <th>
                                            Nombre de cuenta
                                        </th>
                                        <th>
                                            Descripción
                                        </th>
                                        <th>
                                            Tipo de cuenta
                                        </th>
                                        <th>
                                            Nivel
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in ViewBag.acList)
                                    {
                                        <tr>
                                            <td>
                                                @item.num_cuenta
                                            </td>
                                            <td>
                                                @item.nombre_cuenta
                                            </td>
                                            <td>
                                                @item.descripcion
                                            </td>
                                            <td>
                                                @item.tipo_cuenta
                                            </td>
                                            <td>
                                                @item.nivel
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="addRow('@item.id_cuenta','@item.num_cuenta','@item.nombre_cuenta')">Agregar</button>


                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>



<script>

    function addRow(idAcc,numAcc,nameAcc) {

        $('#newAccItemDetails tbody').append('<tr><td>' + numAcc + '</td><td>' + nameAcc + '</td><td><input class="form-control text-box single-line" type="text" id="docNumber" required name="fname"></td><td><input class="form-control text-box single-line" type="text" onchange="calculateDebe()"  required data-type="currency"  "id="txtDebe" name="fname"></td><td><input class="form-control text-box single-line" type="text" id="txtHaber"  onchange="calculateHaber()" required data-type="currency" name="fname"></td><td> <button type="button" class="btn btn-danger" onclick="deleteRow2(this)">Borrar</button></td><td style="display:none;">' + idAcc + '</td></tr>');
    };

    function deleteRow2(obj) {

        $(obj).closest('tr').remove();
        calculateHaber()
        calculateDebe()
    };


    function calculateHaber() {

        formatCur();

        var table = document.getElementById("newAccItemDetails"), sumVal = 0;

        for (var i = 1; i < table.rows.length - 1; i++) {
            var currency = table.rows[i].cells[4].getElementsByTagName("input")[0].value;
            currency = currency.replaceAll(",", "");
            currency = currency.replace("Q", "");
            if (!isNaN(parseFloat(currency))) {
                sumVal = sumVal + parseFloat(currency);
            }
        }
        let dollarUSLocale = Intl.NumberFormat('en-US',{
          
            minimumFractionDigits: 2
        });
        sumVal = sumVal.toFixed(2)
        sumVal = "Q" + dollarUSLocale.format(sumVal);

        document.getElementById("totalHaber").innerHTML = sumVal;
    };


    function calculateDebe() {
        formatCur();
        var table = document.getElementById("newAccItemDetails"), sumVal = 0;

        for (var i = 1; i < table.rows.length - 1; i++) {
            var currency = table.rows[i].cells[3].getElementsByTagName("input")[0].value;
            currency = currency.replace("Q", "");
            currency = currency.replaceAll(",", "");
           
            if (!isNaN(parseFloat(currency))) {
                sumVal = sumVal + parseFloat(currency);
            }
        }
        let dollarUSLocale = Intl.NumberFormat('en-US',{
          
            minimumFractionDigits: 2
        });
        sumVal = sumVal.toFixed(2)
        sumVal = "Q" + dollarUSLocale.format(sumVal);
       
        document.getElementById("totalDebe").innerHTML = sumVal;

    };


    function submit2() {

        generateList();
        document.getElementById("form-data").submit();

    }
    var num = 0;
   
    function generateList() {
        document.getElementById('divHiddens').innerHTML = '';
        var table = document.getElementById("newAccItemDetails");
        for (var i = 1; i < table.rows.length - 1; i++) {
            var currency=0;
            num = i - 1;
        let DivHiddens = document.getElementById("divHiddens");
        let HiddenIndex = document.createElement("input");
        let HiddenIdCuenta = document.createElement("input");
        let HiddenDebe = document.createElement("input");
        let HiddenHaber = document.createElement("input");
        HiddenIndex.name = "Detalle_Partida_Diario.Index";
        HiddenIndex.value = num;
        HiddenIndex.type = "hidden";
        HiddenIdCuenta.name = "Detalle_Partida_Diario[" + num + "].id_cuenta";
        HiddenIdCuenta.value = table.rows[i].cells[6].innerHTML;
        HiddenIdCuenta.type = "hidden";
            HiddenDebe.name = "Detalle_Partida_Diario[" + num + "].debe";
            currency = table.rows[i].cells[3].getElementsByTagName("input")[0].value;
            currency = currency.replaceAll(",", "");
            currency = currency.replace("Q", "");
            HiddenDebe.value = parseFloat(currency);
        HiddenDebe.type = "hidden";
            HiddenHaber.name = "Detalle_Partida_Diario[" + num + "].haber";
            currency = table.rows[i].cells[4].getElementsByTagName("input")[0].value;
            currency = currency.replaceAll(",", "");
            currency = currency.replace("Q", "");
            HiddenHaber.value = parseFloat(currency);
        HiddenHaber.type = "hidden";
        DivHiddens.appendChild(HiddenIndex);
        DivHiddens.appendChild(HiddenIdCuenta);
        DivHiddens.appendChild(HiddenDebe);
        DivHiddens.appendChild(HiddenHaber);

        };


    };

    function formatCur() { 

    $("input[data-type='currency']").on({
        keyup: function () {
            formatCurrency($(this));
        },
        blur: function () {
            formatCurrency($(this), "blur");
        }
    });


    function formatNumber(n) {
   
        return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    }


    function formatCurrency(input, blur) {
  
        var input_val = input.val();

        if (input_val === "") { return; }
        var original_len = input_val.length;

        var caret_pos = input.prop("selectionStart");

        if (input_val.indexOf(".") >= 0) {

   
            var decimal_pos = input_val.indexOf(".");

            var left_side = input_val.substring(0, decimal_pos);
            var right_side = input_val.substring(decimal_pos);

            left_side = formatNumber(left_side);

            right_side = formatNumber(right_side);

            if (blur === "blur") {
                right_side += "00";
            }

            right_side = right_side.substring(0, 2);

            input_val = "Q" + left_side + "." + right_side;

        } else {
    
            input_val = formatNumber(input_val);
            input_val = "Q" + input_val;

            if (blur === "blur") {
                input_val += ".00";
            }
        }

        input.val(input_val);
        var updated_len = input_val.length;
        caret_pos = updated_len - original_len + caret_pos;
        input[0].setSelectionRange(caret_pos, caret_pos);
    }


    }
    
</script>

